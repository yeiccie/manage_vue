'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
require('../../../mixins/index.js');
var buildHelper = require('../../../utils/buildHelper.js');
var useRegister = require('../../../mixins/useRegister.js');

var script = /* @__PURE__ */ vue.defineComponent({
  ...{
    name: "ElAmapMassMarks",
    inheritAttrs: false
  },
  __name: "MassMarks",
  props: buildHelper.buildProps({
    data: {
      type: Array,
      required: true
    },
    // 海量点数据参数
    zooms: {
      type: Array
    },
    // 点标记显示的层级范围，超过范围不显示。
    cursor: {
      type: String
    },
    // 指定鼠标悬停时的鼠，默认值：'pointer'
    styles: {
      type: [Array, Object]
    }
    // 样式
  }),
  emits: ["init", "update:center"],
  setup(__props, { expose: __expose, emit: __emit }) {
    const emits = __emit;
    let $amapComponent;
    const { $$getInstance, parentInstance } = useRegister.useRegister((options, parentComponent) => {
      return new Promise((resolve) => {
        const data = options.data;
        delete options.data;
        $amapComponent = new AMap.MassMarks(data, options);
        $amapComponent.setMap(parentComponent);
        resolve($amapComponent);
      });
    }, {
      emits,
      propsRedirect: {
        styles: "style"
      },
      destroyComponent() {
        if ($amapComponent && (parentInstance == null ? void 0 : parentInstance.$amapComponent)) {
          $amapComponent.clear();
          $amapComponent.setMap(null);
          $amapComponent = null;
        }
      }
    });
    __expose({
      $$getInstance
    });
    return (_ctx, _cache) => {
      return vue.openBlock(), vue.createElementBlock("div");
    };
  }
});

exports.default = script;
//# sourceMappingURL=MassMarks.vue2.js.map
