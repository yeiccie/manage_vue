import Traffic from './Traffic.vue';
import type { Plugin } from "vue";
export declare const ElAmapLayerTraffic: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        autoRefresh: {
            type: BooleanConstructor;
            defult: boolean;
        };
        interval: {
            type: NumberConstructor;
        };
        zooms: {
            type: ArrayConstructor;
        };
        opacity: {
            type: NumberConstructor;
        };
        tileSize: {
            type: NumberConstructor;
        };
    } & {
        visible: import("../../../..").IPropOptions<boolean>;
        zIndex: import("../../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
        extraOptions: import("../../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init", ...args: any[]) => void;
        $amapComponent: any;
        $$getInstance: () => any;
        parentInstance: import("../../../..").IProvideType | undefined;
        stopFresh: () => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "init"[], import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        autoRefresh: {
            type: BooleanConstructor;
            defult: boolean;
        };
        interval: {
            type: NumberConstructor;
        };
        zooms: {
            type: ArrayConstructor;
        };
        opacity: {
            type: NumberConstructor;
        };
        tileSize: {
            type: NumberConstructor;
        };
    } & {
        visible: import("../../../..").IPropOptions<boolean>;
        zIndex: import("../../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
        extraOptions: import("../../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        autoRefresh: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        autoRefresh: {
            type: BooleanConstructor;
            defult: boolean;
        };
        interval: {
            type: NumberConstructor;
        };
        zooms: {
            type: ArrayConstructor;
        };
        opacity: {
            type: NumberConstructor;
        };
        tileSize: {
            type: NumberConstructor;
        };
    } & {
        visible: import("../../../..").IPropOptions<boolean>;
        zIndex: import("../../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
        extraOptions: import("../../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init", ...args: any[]) => void;
        $amapComponent: any;
        $$getInstance: () => any;
        parentInstance: import("../../../..").IProvideType | undefined;
        stopFresh: () => void;
    }, {}, {}, {}, {
        autoRefresh: boolean;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    autoRefresh: {
        type: BooleanConstructor;
        defult: boolean;
    };
    interval: {
        type: NumberConstructor;
    };
    zooms: {
        type: ArrayConstructor;
    };
    opacity: {
        type: NumberConstructor;
    };
    tileSize: {
        type: NumberConstructor;
    };
} & {
    visible: import("../../../..").IPropOptions<boolean>;
    zIndex: import("../../../..").IPropOptions<number>;
    reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
    extraOptions: import("../../../..").IPropOptions<any>;
}>> & {
    onInit?: ((...args: any[]) => any) | undefined;
}, {
    emits: (event: "init", ...args: any[]) => void;
    $amapComponent: any;
    $$getInstance: () => any;
    parentInstance: import("../../../..").IProvideType | undefined;
    stopFresh: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "init"[], "init", {
    autoRefresh: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Plugin<any[]>;
export default ElAmapLayerTraffic;
export declare type ElAmapLayerTrafficInstance = InstanceType<typeof Traffic>;
