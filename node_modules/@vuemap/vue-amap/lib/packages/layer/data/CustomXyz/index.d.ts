import CustomXyz from './CustomXyz.vue';
import type { Plugin } from "vue";
export declare const ElAmapLayerCustomXyz: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        url: {
            required: true;
            type: StringConstructor;
        };
        subdomains: {
            type: import("vue").PropType<string[]>;
        };
        tileType: {
            type: import("vue").PropType<"xyz" | "bd09">;
            default: string;
            validator: (value: string) => boolean;
        };
        proj: {
            type: import("vue").PropType<"bd09" | "wgs84" | "gcj02">;
            default: string;
            validator: (value: string) => boolean;
        };
        zooms: {
            type: import("vue").PropType<[number, number]>;
        };
        opacity: {
            type: NumberConstructor;
        };
        zIndex: {
            type: NumberConstructor;
            default: number;
        };
        mask: {
            type: ArrayConstructor;
        };
        cacheSize: {
            type: NumberConstructor;
            default: number;
        };
        debug: {
            type: BooleanConstructor;
            default: boolean;
        };
        tileMaxZoom: {
            type: NumberConstructor;
        };
        altitude: {
            type: NumberConstructor;
        };
    } & {
        visible: import("../../../..").IPropOptions<boolean>;
        zIndex: import("../../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
        extraOptions: import("../../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init", ...args: any[]) => void;
        $amapComponent: import("@vuemap/amap-xyz-layer/dist/packages/CustomXyzLayer").CustomXyzLayer;
        $$getInstance: () => import("@vuemap/amap-xyz-layer/dist/packages/CustomXyzLayer").CustomXyzLayer;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "init"[], import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        url: {
            required: true;
            type: StringConstructor;
        };
        subdomains: {
            type: import("vue").PropType<string[]>;
        };
        tileType: {
            type: import("vue").PropType<"xyz" | "bd09">;
            default: string;
            validator: (value: string) => boolean;
        };
        proj: {
            type: import("vue").PropType<"bd09" | "wgs84" | "gcj02">;
            default: string;
            validator: (value: string) => boolean;
        };
        zooms: {
            type: import("vue").PropType<[number, number]>;
        };
        opacity: {
            type: NumberConstructor;
        };
        zIndex: {
            type: NumberConstructor;
            default: number;
        };
        mask: {
            type: ArrayConstructor;
        };
        cacheSize: {
            type: NumberConstructor;
            default: number;
        };
        debug: {
            type: BooleanConstructor;
            default: boolean;
        };
        tileMaxZoom: {
            type: NumberConstructor;
        };
        altitude: {
            type: NumberConstructor;
        };
    } & {
        visible: import("../../../..").IPropOptions<boolean>;
        zIndex: import("../../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
        extraOptions: import("../../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        zIndex: number;
        cacheSize: number;
        tileType: "xyz" | "bd09";
        proj: "bd09" | "wgs84" | "gcj02";
        debug: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        url: {
            required: true;
            type: StringConstructor;
        };
        subdomains: {
            type: import("vue").PropType<string[]>;
        };
        tileType: {
            type: import("vue").PropType<"xyz" | "bd09">;
            default: string;
            validator: (value: string) => boolean;
        };
        proj: {
            type: import("vue").PropType<"bd09" | "wgs84" | "gcj02">;
            default: string;
            validator: (value: string) => boolean;
        };
        zooms: {
            type: import("vue").PropType<[number, number]>;
        };
        opacity: {
            type: NumberConstructor;
        };
        zIndex: {
            type: NumberConstructor;
            default: number;
        };
        mask: {
            type: ArrayConstructor;
        };
        cacheSize: {
            type: NumberConstructor;
            default: number;
        };
        debug: {
            type: BooleanConstructor;
            default: boolean;
        };
        tileMaxZoom: {
            type: NumberConstructor;
        };
        altitude: {
            type: NumberConstructor;
        };
    } & {
        visible: import("../../../..").IPropOptions<boolean>;
        zIndex: import("../../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
        extraOptions: import("../../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init", ...args: any[]) => void;
        $amapComponent: import("@vuemap/amap-xyz-layer/dist/packages/CustomXyzLayer").CustomXyzLayer;
        $$getInstance: () => import("@vuemap/amap-xyz-layer/dist/packages/CustomXyzLayer").CustomXyzLayer;
    }, {}, {}, {}, {
        zIndex: number;
        cacheSize: number;
        tileType: "xyz" | "bd09";
        proj: "bd09" | "wgs84" | "gcj02";
        debug: boolean;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    url: {
        required: true;
        type: StringConstructor;
    };
    subdomains: {
        type: import("vue").PropType<string[]>;
    };
    tileType: {
        type: import("vue").PropType<"xyz" | "bd09">;
        default: string;
        validator: (value: string) => boolean;
    };
    proj: {
        type: import("vue").PropType<"bd09" | "wgs84" | "gcj02">;
        default: string;
        validator: (value: string) => boolean;
    };
    zooms: {
        type: import("vue").PropType<[number, number]>;
    };
    opacity: {
        type: NumberConstructor;
    };
    zIndex: {
        type: NumberConstructor;
        default: number;
    };
    mask: {
        type: ArrayConstructor;
    };
    cacheSize: {
        type: NumberConstructor;
        default: number;
    };
    debug: {
        type: BooleanConstructor;
        default: boolean;
    };
    tileMaxZoom: {
        type: NumberConstructor;
    };
    altitude: {
        type: NumberConstructor;
    };
} & {
    visible: import("../../../..").IPropOptions<boolean>;
    zIndex: import("../../../..").IPropOptions<number>;
    reEventWhenUpdate: import("../../../..").IPropOptions<boolean>;
    extraOptions: import("../../../..").IPropOptions<any>;
}>> & {
    onInit?: ((...args: any[]) => any) | undefined;
}, {
    emits: (event: "init", ...args: any[]) => void;
    $amapComponent: import("@vuemap/amap-xyz-layer/dist/packages/CustomXyzLayer").CustomXyzLayer;
    $$getInstance: () => import("@vuemap/amap-xyz-layer/dist/packages/CustomXyzLayer").CustomXyzLayer;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "init"[], "init", {
    zIndex: number;
    cacheSize: number;
    tileType: "xyz" | "bd09";
    proj: "bd09" | "wgs84" | "gcj02";
    debug: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Plugin<any[]>;
export default ElAmapLayerCustomXyz;
export declare type ElAmapLayerCustomXyzInstance = InstanceType<typeof CustomXyz>;
