/// <reference types="@vuemap/amap-jsapi-types" />
import MapType from './MapType.vue';
import type { Plugin } from "vue";
export declare const ElAmapControlMapType: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        defaultType: {
            type: NumberConstructor;
        };
        showTraffic: {
            type: BooleanConstructor;
            default: boolean;
        };
        showRoad: {
            type: BooleanConstructor;
            default: boolean;
        };
    } & {
        visible: import("../../..").IPropOptions<boolean>;
        zIndex: import("../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
        extraOptions: import("../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init", ...args: any[]) => void;
        $amapComponent: AMap.MapType;
        $$getInstance: () => AMap.MapType;
        parentInstance: import("../../..").IProvideType | undefined;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "init"[], import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        defaultType: {
            type: NumberConstructor;
        };
        showTraffic: {
            type: BooleanConstructor;
            default: boolean;
        };
        showRoad: {
            type: BooleanConstructor;
            default: boolean;
        };
    } & {
        visible: import("../../..").IPropOptions<boolean>;
        zIndex: import("../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
        extraOptions: import("../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        showTraffic: boolean;
        showRoad: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        defaultType: {
            type: NumberConstructor;
        };
        showTraffic: {
            type: BooleanConstructor;
            default: boolean;
        };
        showRoad: {
            type: BooleanConstructor;
            default: boolean;
        };
    } & {
        visible: import("../../..").IPropOptions<boolean>;
        zIndex: import("../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
        extraOptions: import("../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init", ...args: any[]) => void;
        $amapComponent: AMap.MapType;
        $$getInstance: () => AMap.MapType;
        parentInstance: import("../../..").IProvideType | undefined;
    }, {}, {}, {}, {
        showTraffic: boolean;
        showRoad: boolean;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    defaultType: {
        type: NumberConstructor;
    };
    showTraffic: {
        type: BooleanConstructor;
        default: boolean;
    };
    showRoad: {
        type: BooleanConstructor;
        default: boolean;
    };
} & {
    visible: import("../../..").IPropOptions<boolean>;
    zIndex: import("../../..").IPropOptions<number>;
    reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
    extraOptions: import("../../..").IPropOptions<any>;
}>> & {
    onInit?: ((...args: any[]) => any) | undefined;
}, {
    emits: (event: "init", ...args: any[]) => void;
    $amapComponent: AMap.MapType;
    $$getInstance: () => AMap.MapType;
    parentInstance: import("../../..").IProvideType | undefined;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "init"[], "init", {
    showTraffic: boolean;
    showRoad: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Plugin<any[]>;
export default ElAmapControlMapType;
export declare type ElAmapControlMapTypeInstance = InstanceType<typeof MapType>;
