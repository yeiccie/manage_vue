/// <reference types="@vuemap/amap-jsapi-types" />
import MassMarks from './MassMarks.vue';
import type { Plugin } from "vue";
export declare const ElAmapMassMarks: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        data: {
            type: ArrayConstructor;
            required: true;
        };
        zooms: {
            type: ArrayConstructor;
        };
        cursor: {
            type: StringConstructor;
        };
        styles: {
            type: (ArrayConstructor | ObjectConstructor)[];
        };
    } & {
        visible: import("../../..").IPropOptions<boolean>;
        zIndex: import("../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
        extraOptions: import("../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
        "onUpdate:center"?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init" | "update:center", ...args: any[]) => void;
        $amapComponent: AMap.MassMarks;
        $$getInstance: () => AMap.MassMarks;
        parentInstance: import("../../..").IProvideType | undefined;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("init" | "update:center")[], import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        data: {
            type: ArrayConstructor;
            required: true;
        };
        zooms: {
            type: ArrayConstructor;
        };
        cursor: {
            type: StringConstructor;
        };
        styles: {
            type: (ArrayConstructor | ObjectConstructor)[];
        };
    } & {
        visible: import("../../..").IPropOptions<boolean>;
        zIndex: import("../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
        extraOptions: import("../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
        "onUpdate:center"?: ((...args: any[]) => any) | undefined;
    }, {}, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        data: {
            type: ArrayConstructor;
            required: true;
        };
        zooms: {
            type: ArrayConstructor;
        };
        cursor: {
            type: StringConstructor;
        };
        styles: {
            type: (ArrayConstructor | ObjectConstructor)[];
        };
    } & {
        visible: import("../../..").IPropOptions<boolean>;
        zIndex: import("../../..").IPropOptions<number>;
        reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
        extraOptions: import("../../..").IPropOptions<any>;
    }>> & {
        onInit?: ((...args: any[]) => any) | undefined;
        "onUpdate:center"?: ((...args: any[]) => any) | undefined;
    }, {
        emits: (event: "init" | "update:center", ...args: any[]) => void;
        $amapComponent: AMap.MassMarks;
        $$getInstance: () => AMap.MassMarks;
        parentInstance: import("../../..").IProvideType | undefined;
    }, {}, {}, {}, {}>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    data: {
        type: ArrayConstructor;
        required: true;
    };
    zooms: {
        type: ArrayConstructor;
    };
    cursor: {
        type: StringConstructor;
    };
    styles: {
        type: (ArrayConstructor | ObjectConstructor)[];
    };
} & {
    visible: import("../../..").IPropOptions<boolean>;
    zIndex: import("../../..").IPropOptions<number>;
    reEventWhenUpdate: import("../../..").IPropOptions<boolean>;
    extraOptions: import("../../..").IPropOptions<any>;
}>> & {
    onInit?: ((...args: any[]) => any) | undefined;
    "onUpdate:center"?: ((...args: any[]) => any) | undefined;
}, {
    emits: (event: "init" | "update:center", ...args: any[]) => void;
    $amapComponent: AMap.MassMarks;
    $$getInstance: () => AMap.MassMarks;
    parentInstance: import("../../..").IProvideType | undefined;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("init" | "update:center")[], "init" | "update:center", {}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Plugin<any[]>;
export default ElAmapMassMarks;
export declare type ElAmapMassMarksInstance = InstanceType<typeof MassMarks>;
