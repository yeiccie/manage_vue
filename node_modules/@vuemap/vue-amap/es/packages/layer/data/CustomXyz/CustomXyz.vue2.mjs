import { defineComponent, openBlock, createElementBlock } from 'vue';
import { CustomXyzLayer } from '@vuemap/amap-xyz-layer';
import '../../../../mixins/index.mjs';
import { propsTypes } from './props.mjs';
import { useRegister } from '../../../../mixins/useRegister.mjs';

var script = /* @__PURE__ */ defineComponent({
  ...{
    name: "ElAmapLayerCustomXyz",
    inheritAttrs: false
  },
  __name: "CustomXyz",
  props: propsTypes,
  emits: ["init"],
  setup(__props, { expose: __expose, emit: __emit }) {
    const emits = __emit;
    let $amapComponent;
    const { $$getInstance } = useRegister((options, parentComponent) => {
      return new Promise((resolve) => {
        $amapComponent = new CustomXyzLayer(parentComponent, options);
        resolve($amapComponent);
      });
    }, {
      emits,
      destroyComponent() {
        if ($amapComponent) {
          $amapComponent.destroy();
          $amapComponent = null;
        }
      }
    });
    __expose({
      $$getInstance
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div");
    };
  }
});

export { script as default };
//# sourceMappingURL=CustomXyz.vue2.mjs.map
