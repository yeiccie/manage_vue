/// <reference types="@vuemap/amap-jsapi-types" />
import type { IProvideType, TRegisterFn } from "../../../../mixins";
declare const _default: import("vue").DefineComponent<{
    zooms: {
        type: ArrayConstructor;
    };
    opacity: {
        type: NumberConstructor;
    };
    collision: {
        type: BooleanConstructor;
        default: boolean;
    };
    allowCollision: {
        type: BooleanConstructor;
        default: boolean;
    };
} & {
    visible: import("../../../../utils/buildHelper").IPropOptions<boolean>;
    zIndex: import("../../../../utils/buildHelper").IPropOptions<number>;
    reEventWhenUpdate: import("../../../../utils/buildHelper").IPropOptions<boolean>;
    extraOptions: import("../../../../utils/buildHelper").IPropOptions<any>;
}, {
    needInitComponents: TRegisterFn[];
    provideData: IProvideType;
    emits: (event: "init", ...args: any[]) => void;
    $amapComponent: AMap.LabelsLayer;
    $$getInstance: () => AMap.LabelsLayer;
    parentInstance: IProvideType | undefined;
    $$add: (markers: AMap.LabelMarker | AMap.LabelMarker[]) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "init"[], "init", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    zooms: {
        type: ArrayConstructor;
    };
    opacity: {
        type: NumberConstructor;
    };
    collision: {
        type: BooleanConstructor;
        default: boolean;
    };
    allowCollision: {
        type: BooleanConstructor;
        default: boolean;
    };
} & {
    visible: import("../../../../utils/buildHelper").IPropOptions<boolean>;
    zIndex: import("../../../../utils/buildHelper").IPropOptions<number>;
    reEventWhenUpdate: import("../../../../utils/buildHelper").IPropOptions<boolean>;
    extraOptions: import("../../../../utils/buildHelper").IPropOptions<any>;
}>> & {
    onInit?: ((...args: any[]) => any) | undefined;
}, {
    collision: boolean;
    allowCollision: boolean;
}, {}>;
export default _default;
