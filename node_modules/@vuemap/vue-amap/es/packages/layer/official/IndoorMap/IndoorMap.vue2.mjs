import { defineComponent, openBlock, createElementBlock } from 'vue';
import '../../../../mixins/index.mjs';
import { buildProps } from '../../../../utils/buildHelper.mjs';
import '../../../../utils/index.mjs';
import { useRegister } from '../../../../mixins/useRegister.mjs';
import { isIndoorMapInstance } from '../../../../utils/util.mjs';

var script = /* @__PURE__ */ defineComponent({
  ...{
    name: "ElAmapLayerIndoorMap",
    inheritAttrs: false
  },
  __name: "IndoorMap",
  props: buildProps({
    opacity: {
      type: Number
    },
    // 透明度，默认 1
    cursor: {
      type: String
    },
    // 指定鼠标悬停到店铺面时的鼠标样式
    hideFloorBar: {
      type: Boolean,
      default: false
    }
    // 是否隐藏楼层切换控件，默认值：false
  }),
  emits: ["init"],
  setup(__props, { expose: __expose, emit: __emit }) {
    const emits = __emit;
    let $amapComponent;
    const { $$getInstance, parentInstance } = useRegister((options, parentComponent) => {
      return new Promise((resolve) => {
        AMap.plugin(["AMap.IndoorMap"], () => {
          $amapComponent = new AMap.IndoorMap(options);
          const layers = parentComponent.getLayers();
          layers.push($amapComponent);
          parentComponent.setLayers(layers);
          resolve($amapComponent);
        });
      });
    }, {
      emits,
      watchRedirectFn: {
        __hideFloorBar(flag) {
          !flag ? $amapComponent.hideFloorBar() : $amapComponent.showFloorBar();
        }
      },
      destroyComponent() {
        if ($amapComponent && (parentInstance == null ? void 0 : parentInstance.$amapComponent)) {
          const layers = parentInstance.$amapComponent.getLayers();
          let index = -1;
          for (let i = 0; i < layers.length; i++) {
            if (isIndoorMapInstance(layers[i])) {
              index = i;
              break;
            }
          }
          if (index > -1) {
            layers.splice(index, 1);
            parentInstance.$amapComponent.setLayers(layers);
          }
          $amapComponent = null;
        }
      }
    });
    __expose({
      $$getInstance
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div");
    };
  }
});

export { script as default };
//# sourceMappingURL=IndoorMap.vue2.mjs.map
