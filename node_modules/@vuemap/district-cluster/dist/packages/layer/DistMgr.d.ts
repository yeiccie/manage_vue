import DistrictExplorer from './DistrictExplorer';
interface DeepCount {
    total: number;
    count: number;
}
export default class DistMgr {
    _opts: any;
    _touchMap: any;
    singleCountryNode: any;
    isDistReady: boolean;
    nodeMap: {};
    waitFnList: any[];
    singleDistExplorer: DistrictExplorer;
    constructor(opts: any);
    pixelToLngLat(x: any, y: any, pz: any): number[];
    getBounds(node: any): AMap.Bounds;
    filterAreaTree(root: any): void;
    isReady(): boolean;
    getParentAdcode(adcode: any, acroutes: any): any;
    getSubIdx(subAdcode: any): any;
    getChildrenNum(adcode: any): any;
    getChildrenNumOfNode(node: any): any;
    getNodeByAdcode(adcode: any): any;
    getNodeChildren(adcode: any): any;
    getExplorer(): DistrictExplorer;
    traverseCountry(bounds: any, zoom: any, handler: any, finish: any, thisArg: any): void;
    getNodeBoundsSize(node: any, zoom: any): number[];
    doesRingRingIntersect(mapBounds: AMap.Bounds, bounds: AMap.Bounds): boolean;
    traverseNode(topNode: any, bounds: AMap.Bounds, zoom: any, handler: any, finish: any, thisArg: any, excludedAdcodes: any, deepCount?: DeepCount): void;
    onReady(fn: any, thisArg: any, canSync?: any): void;
    getPixelZoom(): any;
    loadAreaNode(adcode: any, callback: any, thisArg: any, callSync: any): void;
    isExcludedAdcode(adcode: any): any;
    traverseTopNodes(bounds: AMap.Bounds, zoom: any, handler: any, finish: any, thisArg: any): void;
    tryClearCache(tag: any, maxLeft: any): void;
    touchAdcode(adcode: any, tag: any): void;
    destroy(): void;
}
export {};
