{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.render = render;\nvar _vue = require(\"vue\");\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_scrollbar = (0, _vue.resolveComponent)(\"el-scrollbar\");\n  return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_el_scrollbar, {\n    ref: \"scrollContainer\",\n    vertical: false,\n    \"class\": \"scroll-container\",\n    onWheel: (0, _vue.withModifiers)($options.handleScroll, [\"prevent\"])\n  }, {\n    \"default\": (0, _vue.withCtx)(function () {\n      return [(0, _vue.renderSlot)(_ctx.$slots, \"default\", {}, undefined, true)];\n    }),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"onWheel\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_scrollbar","ref","vertical","onWheel","_withModifiers","$options","handleScroll","_withCtx","_renderSlot","_ctx","$slots","undefined","_"],"sources":["/Users/yeiccie/Documents/work_space/second-hand-mall/manage_code/src/components/index/indexScrollPane.vue"],"sourcesContent":["<template>\r\n\t<el-scrollbar ref=\"scrollContainer\" :vertical=\"false\" class=\"scroll-container\" @wheel.native.prevent=\"handleScroll\">\r\n\t\t<slot />\r\n\t</el-scrollbar>\r\n</template>\r\n\r\n<script>\r\n\tconst tagAndTagSpacing = 4 // tagAndTagSpacing\r\n\r\n\texport default {\r\n\t\tname: 'ScrollPane',\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tleft: 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tscrollWrapper() {\r\n\t\t\t\treturn this.$refs.scrollContainer\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\thandleScroll(e) {\r\n\t\t\t\tconst eventDelta = e.wheelDelta || -e.deltaY * 40\r\n\t\t\t\tconst $scrollWrapper = this.scrollWrapper\r\n\t\t\t\t$scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4\r\n\t\t\t},\r\n\t\t\tmoveToTarget(currentTag) {\r\n\t\t\t\tconst $container = this.$refs.scrollContainer.$el\r\n\t\t\t\tconst $containerWidth = $container.offsetWidth\r\n\t\t\t\tconst $scrollWrapper = this.scrollWrapper\r\n\t\t\t\tconst tagList = this.$parent.$refs.tag\r\n\r\n\t\t\t\tlet firstTag = null\r\n\t\t\t\tlet lastTag = null\r\n\r\n\t\t\t\t// find first tag and last tag\r\n\t\t\t\tif (tagList.length > 0) {\r\n\t\t\t\t\tfirstTag = tagList[0]\r\n\t\t\t\t\tlastTag = tagList[tagList.length - 1]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (firstTag === currentTag) {\r\n\t\t\t\t\t$scrollWrapper.scrollLeft = 0\r\n\t\t\t\t} else if (lastTag === currentTag) {\r\n\t\t\t\t\t$scrollWrapper.scrollLeft = $scrollWrapper.scrollWidth - $containerWidth\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// find preTag and nextTag\r\n\t\t\t\t\tconst currentIndex = tagList.findIndex(item => item === currentTag)\r\n\t\t\t\t\tconst prevTag = tagList[currentIndex - 1]\r\n\t\t\t\t\tconst nextTag = tagList[currentIndex + 1]\r\n\r\n\t\t\t\t\t// the tag's offsetLeft after of nextTag\r\n\t\t\t\t\tconst afterNextTagOffsetLeft = nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagAndTagSpacing\r\n\r\n\t\t\t\t\t// the tag's offsetLeft before of prevTag\r\n\t\t\t\t\tconst beforePrevTagOffsetLeft = prevTag.$el.offsetLeft - tagAndTagSpacing\r\n\r\n\t\t\t\t\tif (afterNextTagOffsetLeft > $scrollWrapper.scrollLeft + $containerWidth) {\r\n\t\t\t\t\t\t$scrollWrapper.scrollLeft = afterNextTagOffsetLeft - $containerWidth\r\n\t\t\t\t\t} else if (beforePrevTagOffsetLeft < $scrollWrapper.scrollLeft) {\r\n\t\t\t\t\t\t$scrollWrapper.scrollLeft = beforePrevTagOffsetLeft\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.scroll-container {\r\n\r\n\t\t:deep(.el-scrollbar__bar) {\r\n\t\t\tbottom: 0px;\r\n\t\t}\r\n\r\n\t\t:deep(.el-scrollbar__wrap) {\r\n\t\t\theight: 49px;\r\n\t\t}\r\n\t}\r\n</style>"],"mappings":";;;;;;;;;;gCACC,IAAAA,gBAAA,EAEeC,uBAAA;IAFDC,GAAG,EAAC,iBAAiB;IAAEC,QAAQ,EAAE,KAAK;IAAE,SAAM,kBAAkB;IAAEC,OAAK,EADtF,IAAAC,kBAAA,EACuGC,QAAA,CAAAC,YAAY;;IADnH,eAAAC,YAAA,EAEE;MAAA,OAAQ,CAAR,IAAAC,eAAA,EAAQC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q;;IAFVC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}